// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoList.Models;

namespace MyWedapi.Migrations
{
    [DbContext(typeof(TodoListsContext))]
    [Migration("20210407133032_InitialOfListsOfTasks")]
    partial class InitialOfListsOfTasks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ToDoList.Models.MyList", b =>
                {
                    b.Property<int>("MyListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("my_list_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("MyListId")
                        .HasName("pk_my_lists");

                    b.ToTable("my_lists");
                });

            modelBuilder.Entity("ToDoList.Models.MyTask", b =>
                {
                    b.Property<int>("MyTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("my_task_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("DoDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("do_date");

                    b.Property<bool>("Done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<int>("MyListId")
                        .HasColumnType("integer")
                        .HasColumnName("my_list_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("MyTaskId")
                        .HasName("pk_my_tasks");

                    b.HasIndex("MyListId")
                        .HasDatabaseName("ix_my_tasks_my_list_id");

                    b.ToTable("my_tasks");
                });

            modelBuilder.Entity("ToDoList.Models.MyTask", b =>
                {
                    b.HasOne("ToDoList.Models.MyList", "MyList")
                        .WithMany("Tasks")
                        .HasForeignKey("MyListId")
                        .HasConstraintName("fk_my_tasks_my_lists_my_list_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyList");
                });

            modelBuilder.Entity("ToDoList.Models.MyList", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
